@using SalesDashboard.Components.Shared.Dialog
@using SalesDashboard.Components.StateProviders.CurrencyStateProvider

<DialogComponent DialogSize="EnumDialogSize.Default">
    <HeaderContent>
        @MudDialog.Title
    </HeaderContent>
    <BodyContent>
        <div class="select-currency">
            <MudRadioGroup T="EnumCurrency" @bind-Value="SelectedCurrency">
                <MudRadio T="EnumCurrency" Value="EnumCurrency.USD" Color="Color.Primary">United States dollar</MudRadio>
                <MudRadio T="EnumCurrency" Value="EnumCurrency.EUR" Color="Color.Primary">Euro</MudRadio>
                <MudRadio T="EnumCurrency" Value="EnumCurrency.GBP" Color="Color.Primary">Pound sterling</MudRadio>
            </MudRadioGroup>
        </div>
    </BodyContent>
    <FooterContent>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleOkAsync" DropShadow="false">OK</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="MudDialog.Cancel" DropShadow="false">Cancel</MudButton>
    </FooterContent>
</DialogComponent>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    [CascadingParameter]
    public CurrencyStateProviderComponent CurrencyStateProviderComponent { get; set; } = null!;

    private EnumCurrency SelectedCurrency { get; set; }

    protected override void OnInitialized()
    {
        SelectedCurrency = CurrencyStateProviderComponent.Currency.Value;
    }

    private async Task HandleOkAsync()
    {
        await CurrencyStateProviderComponent.SetCurrencyAsync(SelectedCurrency);

        MudDialog.Close();
    }
}
