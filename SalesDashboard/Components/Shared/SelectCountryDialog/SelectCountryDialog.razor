@using Microsoft.EntityFrameworkCore
@using SalesDashboard.Components.Shared.Dialog
@using SalesDashboard.Entities

@inject IDbContextFactory<AdventureWorksContext> DbFactory

<DialogComponent DialogSize="EnumDialogSize.ExtraLarge">
    <HeaderContent>
        Select Country
    </HeaderContent>
    <BodyContent>
        <div class="select-country">
            <div class="data-grid-container">
                <MudDataGrid T="CountryRegion" 
                             Items="CountryRegions" 
                             RowsPerPage="10" 
                             MultiSelection="true"
                             @bind-SelectedItems="SelectedCountryRegions"
                             SelectOnRowClick="false"
                             Elevation="0"
                             Striped="true">
                    <Columns>
                        <SelectColumn T="CountryRegion" />
                        <PropertyColumn Title="Name" Property="countryRegion => countryRegion.Name" />
                        <PropertyColumn Title="Code" Property="countryRegion => countryRegion.CountryRegionCode" />
                    </Columns>
                    <PagerContent>
                        <MudDataGridPager T="CountryRegion" PageSizeSelector="false" />
                    </PagerContent>
                </MudDataGrid>
            </div>
            <div class="list-container">
                <MudList T="CountryRegion">
                    @foreach (var selectedCountryRegion in SelectedCountryRegions)
                    {
                        <MudChip T="CountryRegion" 
                                 OnClose="() => HandleSelectedCountryDeselected(selectedCountryRegion)">
                            @selectedCountryRegion.Name
                        </MudChip>
                    }
                </MudList>
            </div>
        </div>
    </BodyContent>
    <FooterContent>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" style="margin-right: auto;" OnClick="SelectedCountryRegions.Clear">Clear</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false">OK</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="MudDialog.Cancel" DropShadow="false">Cancel</MudButton>
    </FooterContent>
</DialogComponent>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    private AdventureWorksContext Context { get; set; } = null!;

    private List<CountryRegion> CountryRegions { get; set; } = new();

    private HashSet<CountryRegion> SelectedCountryRegions { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Context = DbFactory.CreateDbContext();

        await RequeryAsync();
    }

    private async Task RequeryAsync()
    {
        var query = Context.CountryRegions.AsQueryable();

        CountryRegions = await query.ToListAsync();
    }

    private void HandleSelectedCountryDeselected(CountryRegion countryRegion)
    {
        SelectedCountryRegions.Remove(countryRegion);
    }
}
