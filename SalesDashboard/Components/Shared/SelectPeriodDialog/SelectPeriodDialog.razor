@using SalesDashboard.Components.Shared.Dialog

<DialogComponent DialogSize="EnumDialogSize.Large">
    <HeaderContent>
        @MudDialog.Title
    </HeaderContent>
    <BodyContent>
        <div class="select-period">
            <div class="select-period-value">
                @if (From.HasValue)
                {
                    @From.Value.Date.ToShortDateString()
                }
                -
                @if (Through.HasValue)
                {
                    @Through.Value.Date.ToShortDateString()
                }
            </div>
            <div class="select-period-pickers">
                <MudDatePicker @bind-Date="From" PickerVariant="PickerVariant.Static" ShowToolbar="false" />
                <MudDatePicker @bind-Date="Through" PickerVariant="PickerVariant.Static" ShowToolbar="false" />
            </div>
        </div>
    </BodyContent>
    <FooterContent>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="HandleClear" DropShadow="false" style="margin-right: auto;">Clear</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleOk" DropShadow="false">OK</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="MudDialog.Cancel" DropShadow="false">Cancel</MudButton>
    </FooterContent>
</DialogComponent>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public DateTime? From { get; set; }

    [Parameter]
    public DateTime? Through { get; set; }

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
        }
    }

    private void HandleClear()
    {
        From = null;
        Through = null;
    }

    private void HandleOk()
    {
        SelectPeriodDialogResult dialogResult = new()
        {
            From = From,
            Through = Through
        };

        MudDialog.Close(DialogResult.Ok(dialogResult));
    }
}
