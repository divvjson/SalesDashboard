@using SalesDashboard.Components.StateProviders.BreakpointStateProvider

<MudExpansionPanels style="@GetMudExpansionPanelsStyle()">
    <MudExpansionPanel style="@GetMudExpansionPanelStyle()">
        <TitleContent>
            <div class="filter-settings-title-container">
                <div>Filter Settings</div>
                <MudBadge Content="NumberOfFilterSettingsSet"
                          Color="Color.Default"
                          Overlap="true"
                          Bordered="true"
                          Visible="NumberOfFilterSettingsSet > 0">
                    <MudIcon Icon="@Icons.Material.Outlined.FilterAlt" />
                </MudBadge>
            </div>
        </TitleContent>
        <ChildContent>
            <div class="filter-settings-expansion-panel-container">
                @ChildContent
            </div>
        </ChildContent>
    </MudExpansionPanel>
</MudExpansionPanels>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [CascadingParameter]
    public BreakpointStateProviderComponent BreakpointStateProviderComponent { get; set; } = null!;

    [Parameter, EditorRequired]
    public int NumberOfFilterSettingsSet { get; set; }

    private string GetMudExpansionPanelsStyle()
    {
        var styleString = "border-radius: 4px; padding-top: 24px;";

        if (BreakpointStateProviderComponent.BreakpointStateSubject.Value <= EnumBreakpointState.B_Small_600_904)
        {
            styleString += " padding-left: 12px; padding-right: 12px;";
        }
        else
        {
            styleString += " padding-left: 24px; padding-right: 24px;";
        }

        return styleString;
    }

    private string GetMudExpansionPanelStyle()
    {
        var styleString = "background-color: var(--gray-50);";

        return styleString;
    }
}
