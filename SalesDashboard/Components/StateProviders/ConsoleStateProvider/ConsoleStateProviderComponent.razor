@using SalesDashboard.Services

@implements IDisposable
@inject AdventureWorksDbCommandService AdventureWorksDbCommandService

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    public BehaviorSubject<EnumConsoleState> ConsoleStateSubject = new(EnumConsoleState.Closed);

    public BehaviorSubject<string?> LatestConsoleLogEntrySubject = new(null);

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private IDisposable? LatestDbCommandTextSubcription { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            LatestDbCommandTextSubcription = AdventureWorksDbCommandService.LatestDbCommandTextSubject
                .Subscribe(commandText =>
                {
                    if (!string.IsNullOrEmpty(commandText))
                    {
                        LatestConsoleLogEntrySubject.OnNext(commandText);
                    }
                });
        }
    }

    public void Toggle()
    {
        if (ConsoleStateSubject.Value is EnumConsoleState.Open)
        {
            Close();
        }
        else if (ConsoleStateSubject.Value is EnumConsoleState.Closed)
        {
            Open();
        }
    }

    public void Open()
    {
        if (ConsoleStateSubject.Value is EnumConsoleState.Closed)
        {
            ConsoleStateSubject.OnNext(EnumConsoleState.Open);
        }
    }

    public void Close()
    {
        if (ConsoleStateSubject.Value is EnumConsoleState.Open)
        {
            ConsoleStateSubject.OnNext(EnumConsoleState.Closed);
        }
    }

    public void Dispose()
    {
        LatestDbCommandTextSubcription?.Dispose();
    }
}
