@inject IJSRuntime JSRuntime

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    public BehaviorSubject<EnumBreakpointState?> BreakpointStateSubject = new(null);

    private IJSObjectReference JSModule { get; set; } = null!;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            JSModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", $"./Components/StateProviders/BreakpointStateProvider/{nameof(BreakpointStateProviderComponent)}.razor.js");

            await JSModule.InvokeVoidAsync("initializeResizeListener", DotNetObjectReference.Create(this));

            var newBreakpointState = await GetBreakpointStateAsync();

            BreakpointStateSubject.OnNext(newBreakpointState);

            StateHasChanged();
        }
    }

    [JSInvokable]
    public async Task HandleResize()
    {
        var oldBreakpointState = BreakpointStateSubject.Value;
        var newBreakpointState = await GetBreakpointStateAsync();

        if (oldBreakpointState != newBreakpointState)
        {
            BreakpointStateSubject.OnNext(newBreakpointState);
            StateHasChanged();
        }
    }

    private async Task<EnumBreakpointState> GetBreakpointStateAsync()
    {
        var width = await JSModule.InvokeAsync<int>("getScreenWidth");

        // https://m2.material.io/design/layout/responsive-layout-grid.html#breakpoints
        return width switch
        {
            int n when (n >= 1440) => EnumBreakpointState.E_XLarge_1440_Infinity,
            int n when (n >= 1240) => EnumBreakpointState.D_Large_1240_1439,
            int n when (n >= 905) => EnumBreakpointState.C_Medium_905_1239,
            int n when (n >= 600) => EnumBreakpointState.B_Small_600_904,
            _ => EnumBreakpointState.A_XSmall_0_599
        };
    }
}
