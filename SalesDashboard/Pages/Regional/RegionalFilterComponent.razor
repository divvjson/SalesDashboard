@using Microsoft.EntityFrameworkCore
@using SalesDashboard.Components.Shared.SelectCountry
@using SalesDashboard.Entities

@inject IDbContextFactory<AdventureWorksContext> DbFactory

<div class="regional-filter">
    <div class="regional-filter-item">
        <div class="regional-filter-item-key">Country:</div>
        <div class="regional-filter-item-value">Denmark, Sweden, Germany, Canada, Portugal, Spain, Italy, Poland</div>
        <Button Color="ButtonColor.Primary" @onclick="ShowSelectCountryModalAsync">Select</Button>
    </div>
    <hr>
    <Button Color="ButtonColor.Danger" Style="align-self: flex-start;">Reset</Button>
</div>

<Modal @ref="Modal" 
       Title="Select Country" 
       IsVerticallyCentered="true"
       IsScrollable="true"
       UseStaticBackdrop="true"
       CloseOnEscape="false"
       ShowCloseButton="false"
       Size="ModalSize.ExtraLarge">
    <BodyTemplate>
        <SelectCountryComponent SelectedCountryRegions="SelectedCountryRegions" />
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick="HandleSelectCountrySubmittedAsync">Select</Button>
        <Button @onclick="HandleSelectCountryCancelledAsync">Cancel</Button>
    </FooterTemplate>
</Modal>

@code {
    public List<CountryRegion> SelectedCountryRegions { get; set; } = new();

    private Modal Modal { get; set; } = null!;

    private async Task ShowSelectCountryModalAsync()
    {
        await Modal.ShowAsync();
    }

    private async Task HandleSelectCountrySubmittedAsync()
    {
        await Modal.HideAsync();
    }

    private async Task HandleSelectCountryCancelledAsync()
    {
        await Modal.HideAsync();
    }
}
